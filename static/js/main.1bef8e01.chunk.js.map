{"version":3,"sources":["logo.svg","UserList.js","App.js","reportWebVitals.js","index.js"],"names":["UsersList","users","length","map","user","allUsers","App","state","filteredUsers","e","text","currentTarget","value","this","getFilteredUsersForText","then","setState","catch","err","console","log","Promise","resolve","time","Math","random","setTimeout","filter","toLowerCase","includes","onInput","filterUsers","bind","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2PAAe,I,kBCiBAA,EAfG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEnB,OAAIA,EAAMC,OAAS,EAEf,6BACGD,EAAME,KAAI,SAAAC,GAAI,OAAI,6BAAgBA,GAAPA,QAMhC,6CCREC,EAAW,CAAC,SAAU,QAAS,QAAS,QAAS,QAAS,QAqDjDC,E,kDAhDb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXC,cAAeH,GAJN,E,+CAQb,SAAYI,GAAI,IAAD,OACPC,EAAOD,EAAEE,cAAcC,MAC7BC,KAAKC,wBAAwBJ,GAAMK,MACjC,SAAAP,GAAa,OACb,EAAKQ,SAAS,CAACR,cAAcA,OAC7BS,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,qCAW7B,SAAwBR,GACtB,OAAO,IAAIW,SAAQ,SAAAC,GACjB,IAAMC,EAA6B,IAArBC,KAAKC,SAAW,GAC9BC,YAAW,WACT,IAAMlB,EAAgBH,EAASsB,QAAO,SAAAvB,GAAI,OAAIA,EAAKwB,cAAcC,SAASnB,EAAKkB,kBAC/EN,EAAQd,KACPe,Q,oBAQP,WACE,OACE,gCACE,uBAAOO,QAASjB,KAAKkB,YAAYC,KAAKnB,QACtC,cAAC,EAAD,CAAWZ,MAAOY,KAAKN,MAAMC,uB,GA5CnByB,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.1bef8e01.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import './UserList.css';\n\nconst UsersList = ({ users }) => {\n\n  if (users.length > 0) {\n    return (\n      <ul>\n        {users.map(user => <li key={user}>{user}</li>)}\n      </ul>\n    );\n  }\n\n  return (\n    <p>No results!</p>\n  );\n};\n\nexport default UsersList;\n","import * as React from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport UsersList from './UserList';\n\nconst allUsers = ['Michal', 'Kasia', 'Jacek', 'Marta', 'Tomek', 'Ania'];\n\n\nclass App extends React.Component {\n\n  constructor(){\n    super();\n\n    this.state = {\n      filteredUsers: allUsers\n    };\n  }\n\n  filterUsers(e) {\n    const text = e.currentTarget.value;\n    this.getFilteredUsersForText(text).then(\n      filteredUsers =>\n      this.setState({filteredUsers:filteredUsers})\n    ).catch(err => console.log(err))\n  }\n\n  // filterUsers(e) {\n  //   const text = e.currentTarget.value;\n  //   const filteredUsers = this.getFilteredUsersForText(text)\n  //   this.setState({\n  //     filteredUsers\n  //   });\n  // }\n\n  getFilteredUsersForText(text) {\n    return new Promise(resolve => {\n      const time = (Math.random() + 1) * 10;\n      setTimeout(() => {\n        const filteredUsers = allUsers.filter(user => user.toLowerCase().includes(text.toLowerCase()));\n        resolve(filteredUsers);\n      }, time) ;\n    });\n  }\n\n  // getFilteredUsersForText(text) {\n  //   return allUsers.filter(user => user.toLowerCase().includes(text.toLowerCase()))\n  // }\n\n  render() {\n    return (\n      <div>\n        <input onInput={this.filterUsers.bind(this)} />\n        <UsersList users={this.state.filteredUsers} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as React from 'react'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}